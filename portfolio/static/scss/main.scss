/*! HTML5 Boilerplate v8.0.0 | MIT License | https://html5boilerplate.com/ */

/* main.css 2.1.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
Base styles: opinionated defaults
========================================================================== */

html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
}
  
/*
* Remove text-shadow in selection highlight:
* https://twitter.com/miketaylr/status/12228805301
*
* Vendor-prefixed and regular ::selection selectors cannot be combined:
* https://stackoverflow.com/a/16982510/7133471
*
* Customize the background color to match your design.
*/

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
* A better looking default horizontal rule
*/

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
* Remove the gap between audio, canvas, iframes,
* images, videos and the bottom of their containers:
* https://github.com/h5bp/html5-boilerplate/issues/440
*/

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

/*
* Remove default fieldset styles.
*/

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
* Allow only vertical resizing of textareas.
*/

textarea {
    resize: vertical;
}

/* ==========================================================================
Author's custom styles
========================================================================== */

$red-primary: #e81f1f;
$orange-primary: #e8941e;
$green-primary: #51c742;
$blue-primary: #42acc7;
$blue-secondary: #1f4b7a;
$dim-grey-primary:#8c939a;
$dim-grey-secondary: #2a2a2e;
$dim-grey-background : #1d1d1f;

$color-list: $red-primary, $orange-primary, $green-primary, $blue-primary;

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {   
    background-color: $dim-grey-background;
    color: $dim-grey-primary;
    display: flex;
	justify-content: center;
	align-items: center;
	height: 100vh;

    main {
        width: 60vw;
        height: 60vh;
        position: relative;
        display: flex;
        flex-direction: column;
        overflow: hidden;
	    padding: 2rem;
        border-radius: 3px;
        transform-style: preserve-3d;
        transform: perspective(1000px);

        // * {
        //     transform: translateZ(50px);
        // }

        #nav-container {
            margin-bottom: 5px;
            padding: unset;
            
            .flex-row > a {
                background-color: $dim-grey-secondary;
                color: $dim-grey-primary;
                margin-right: 0.25rem;
                border-radius: 3px;
                border-left: 0.4rem solid;
                overflow: hidden;
                font-size: 2.1rem;
                padding: 0.4rem 0.6rem 0 0.4rem;
                display: flex;

                height: 3rem;
                max-width: 3.4rem;

                transition: max-width 0.5s cubic-bezier(0.075, 0.82, 0.165, 1);

                span {
                    padding-left: 1rem;
                    line-height: 2rem;
                    transition: opacity 0.5s cubic-bezier(0.075, 0.82, 0.165, 1);
                    opacity: 0;
                }

                &:hover {
                    transition: max-width 0.5s cubic-bezier(0.075, 0.82, 0.165, 1);
                    max-width: 9999px;
                    background-color: lighten($dim-grey-secondary, 10%);
                    color: lighten($dim-grey-primary, 10%);

                    span {
                        transition: opacity 0.5s cubic-bezier(0.075, 0.82, 0.165, 1);
                        opacity: 1;
                    }
                }
            }

            // Loop over nav buttons and assign border color
            @for $i from 1 through length($color-list) {
                .flex-row > a:nth-child(#{length($color-list)}n+#{$i}) {
                    border-color: nth($color-list, $i);
                    // &:focus {
                    //     outline-color: nth($color-list, $i);
                    //     box-shadow: 0 0 0 .25rem nth($color-list, $i), 0.25);
                    // }
                }
            }
        }

        #content-container {
            height: 100%;
            background-color: $dim-grey-secondary;
            padding: unset;
        }
    }
}

*, *::before, *::after {
	box-sizing: border-box;
}

/* ==========================================================================
Helper classes
========================================================================== */

/*
* Hide visually and from screen readers
*/

.hidden,
[hidden] {
    display: none !important;
}

/*
* Hide only visually, but have it available for screen readers:
* https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
*
* 1. For long content, line feeds are not interpreted as spaces and small width
*    causes content to wrap 1 word per line:
*    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
*/

.sr-only {
    border: 0;
    clip: rect(0, 0, 0, 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    white-space: nowrap;
    width: 1px;
    /* 1 */
}

/*
* Extends the .sr-only class to allow the element
* to be focusable when navigated to via the keyboard:
* https://www.drupal.org/node/897638
*/

.sr-only.focusable:active,
.sr-only.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    white-space: inherit;
    width: auto;
}

/*
* Hide visually and from screen readers, but maintain layout
*/

.invisible {
    visibility: hidden;
}

/*
* Clearfix: contain floats
*
* For modern browsers
* 1. The space content is one way to avoid an Opera bug when the
*    `contenteditable` attribute is included anywhere else in the document.
*    Otherwise it causes space to appear at the top and bottom of elements
*    that receive the `clearfix` class.
* 2. The use of `table` rather than `block` is only necessary if using
*    `:before` to contain the top-margins of child elements.
*/

.clearfix::before,
.clearfix::after {
    content: " ";
    display: table;
}

.clearfix::after {
    clear: both;
}

/* ==========================================================================
    EXAMPLE Media Queries for Responsive Design.
    These examples override the primary ('mobile first') styles.
    Modify as content requires.
    ========================================================================== */

@media only screen and (min-width: 35em) {
/* Style adjustments for viewports that meet the condition */
}

@media print,
(-webkit-min-device-pixel-ratio: 1.25),
(min-resolution: 1.25dppx),
(min-resolution: 120dpi) {
/* Style adjustments for high resolution devices */
}

/* ==========================================================================
Print styles.
Inlined to avoid the additional HTTP request:
https://www.phpied.com/delay-loading-your-print-css/
========================================================================== */

@media print {
    *,
    *::before,
    *::after {
        background: #fff !important;
        color: #000 !important;
        /* Black prints faster */
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]::after {
        content: " (" attr(href) ")";
    }

    abbr[title]::after {
        content: " (" attr(title) ")";
    }

    /*
        * Don't show links that are fragment identifiers,
        * or use the `javascript:` pseudo protocol
        */
    a[href^="#"]::after,
    a[href^="javascript:"]::after {
        content: "";
    }

    pre {
        white-space: pre-wrap !important;
    }

    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    /*
        * Printing Tables:
        * https://web.archive.org/web/20180815150934/http://css-discuss.incutio.com/wiki/Printing_Tables
        */
    thead {
        display: table-header-group;
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2, h3 {
        page-break-after: avoid;
    }
}

